引入 用户界面, 工具;
公开 类 t<基类型 = 窗口>
{
	// 声明组件开始 (警告：此处禁止修改！)
	用户界面.面板 _主面板;
	用户界面.编辑框 编辑框1;
	用户界面.按钮 按钮1;

	// 声明组件结束 (警告：此处禁止修改！)

	公开 初始化(容器控件 父窗口<可为空> = 空)
	{
		本对象.创建窗口(父窗口);
	}

	公开 创建窗口(容器控件 父窗口<可为空> = 空)
	{
		// 创建窗口开始 (警告：此处禁止修改！)
		整数 风格 = 0;
		风格 |= 窗口风格.显示最大化按钮;
		风格 |= 窗口风格.显示最小化按钮;
		风格 |= 窗口风格.显示关闭按钮;
		风格 |= 窗口风格.显示标题栏;
		风格 |= 窗口风格.显示系统菜单;
		风格 |= 窗口风格.边框可改变大小;
		基类.创建(父窗口, "窗口1", 50, 50, 521, 83, 风格," 主窗口");
		居中(方位.双向);
		显示(真);
		// 创建窗口结束 (警告：此处禁止修改！)
	}

	私有 逻辑 创建窗口控件()
	{
		// 创建组件开始 (警告：此处禁止修改！)
		本对象.宽度 = 本对象.取尺寸().宽度 - 本对象.取客户区尺寸().宽度 + 521;
		本对象.高度 = 本对象.取尺寸().高度 - 本对象.取客户区尺寸().高度 + 83;
		_主面板 = 创建 用户界面.面板();
		_主面板.创建(本对象);

		编辑框1 = 创建 用户界面.编辑框();
		编辑框1.创建(_主面板);
		编辑框1.名称 = "编辑框1";
		编辑框1.左边 = 0;
		编辑框1.顶边 = 0;
		编辑框1.宽度 = 520;
		编辑框1.高度 = 40;
		编辑框1.背景色 = 创建 工具.颜色(230, 255, 255);
		编辑框1.前景色 = 创建 工具.颜色(0, 0, 0);

		按钮1 = 创建 用户界面.按钮();
		按钮1.创建(_主面板);
		按钮1.名称 = "按钮1";
		按钮1.左边 = 190;
		按钮1.顶边 = 40;
		按钮1.宽度 = 98;
		按钮1.高度 = 36;
		按钮1.标题 = "分析";

		// 创建组件结束 (警告：此处禁止修改！)
		返回 真;
	}

	公开 事件处理 逻辑 创建完毕(创建完毕事件 事件)
	{
		创建窗口控件();
		返回 真;
	}
	公开 事件处理 逻辑 按钮1_按钮被单击(按钮被单击 事件)
	{
		词法分析类 c=创建 词法分析类(编辑框1.文本);
		c.分析();
		int i;
		编辑框1.文本="";
		while(i<c.单词总数)
		{
			如果(c.单词数组[i]=="=" && c.单词数组[i-1]=="="){
				编辑框1.文本= 编辑框1.文本+c.单词数组[i];
				i++;
			}
			又如(c.单词数组[i]=="." && c.类型数组[i-1]==单词类型.标识符){
				编辑框1.文本= 编辑框1.文本+c.单词数组[i];
				i++;
			}
			又如(i>0 && (c.单词数组[i-1]=="[" || c.单词数组[i+1]=="]")){
				编辑框1.文本= 编辑框1.文本+c.单词数组[i];
				i++;
			}
			又如((c.单词数组[i]=="[" && c.类型数组[i-1]==单词类型.标识符) || (c.单词数组[i]=="]" && c.类型数组[i-1]==单词类型.标识符)){
				编辑框1.文本= 编辑框1.文本+c.单词数组[i];
				i++;
			}否则{
			编辑框1.文本= 编辑框1.文本+" "+c.单词数组[i];
			i++;
			}
		}	
		返回 真;
	}
	// ${添加事件} (警告：此处禁止修改！)
}